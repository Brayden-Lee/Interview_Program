class Solution {
public:
    int GetUglyNumber_Solution(int index) {
        if (index < 7)
            return index;
        // 暴力寻找
        /*
        int count = 0;
        int cur_number = 1;
        while (count < index)
        {
            if (isUglyNumber(cur_number))
            {
                count++;
            }
            cur_number++;
        }
        return cur_number--;
        */
        vector<int> res(index);
        for(int i = 0; i < 6; i++)
            res[i] = i + 1;
        int t2 = 3;
        int t3 = 2;
        int t5 = 1;
        for (int i = 6; i < index; i++)
        {// 找最接近的倍数
            res[i] = min(res[t2]*2, min(res[t3]*3,res[t5]*5));
            if (res[i] == res[t2]*2) t2++;
            if (res[i] == res[t3]*3) t3++;
            if (res[i] == res[t5]*5) t5++;
        }
        return res[index - 1];
    }
    
    
    
    bool isUglyNumber(int num)
    {
        while ((num % 2) == 0)
        {
            num /= 2;
        }
        while ((num % 3) == 0)
        {
            num /= 3;
        }
        while ((num % 5) == 0)
        {
            num /= 5;
        }
        return (num == 1) ? true : false;
    }
};