class Solution {
public:
    int MoreThanHalfNum_Solution(vector<int> numbers) {
        // HashMap方法：
        /*
        int max = *max_element(numbers.begin(),numbers.end());
        int *arr = new int[max];
        for (int i = 0; i < max; i++)
            arr[i] = 0;
        for (int i = 0; i < numbers.size(); i++)
        {
            arr[numbers[i]]++;
        }
        for (int i = 0; i < numbers.size(); i++)
        {
            if (arr[numbers[i]] * 2 > numbers.size())
                return numbers[i];
        }
        return 0;
        */

        // 利用性质：这个数出现的次数比其他数出现的和还多
        int select = numbers[0];
        int count = 1;
        for (int i = 1; i < numbers.size(); i++)
        {
            if (count == 0)
            {
                select = numbers[i];
                count++;
            } else {
                if (select == numbers[i])
                {
                    count++;
                } else {
                    count--;
                }
            }
        }
        int total = 0;
        for (int i = 0; i < numbers.size(); i++)
        {
            if (numbers[i] == select)
                total++;
        }
        if (total * 2 > numbers.size())
            return select;
        return 0;
    }
};